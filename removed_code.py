#----------------------------CONTROLLERS----------------------------------------
class KeyBoardController:
    '''
    KeyboardController takes Pygame events generated by the
	keyboard and uses them to control the model, by sending Requests
	or to control the Pygame display directly, as with the QuitEvent.
    '''
    def __init__(self, evManager):
        self.evManager = evManager
        self.evManager.RegisterListener( self )

    def Notify(self, event):
        if isinstance(event, TickEvent):
            #Handle input events
            for event in pygame.event.get():
                ev = None
                if event.type == QUIT:
                    ev = QuitEvent()
                                #------------------KEYBOARD---------------------
                elif event.type == KEYDOWN \
                    and event.key == K_SPACE:
                        #Send with the request a point that lies on the
                        #bullet trajectory line
                        shoot_to_xy = pygame.mouse.get_pos()
                        ev = UnitShootBulletRequest( shoot_to_xy )
                                #------------------MOUSE------------------------
                elif event.type == MOUSEBUTTONDOWN \
                    and pygame.mouse.get_pressed()[0] == 1:
                        initial_xy = pygame.mouse.get_pos()
                        ev = GetMousePositionRequest( initial_xy )

                if ev:
                    self.evManager.Post( ev )

#-------------------------------VIEW--------------------------------------------
class PygameView:
    '''
    '''
    def __init__(self, evManager):
        self.evManager = evManager
        self.evManager.RegisterListener( self )
                                #------------------INITIALIZE PYGAME------------
        pygame.init()
                                #-------------------DEFINE DISPLAY SCREEN-------
        self.window = pygame.display.set_mode( (display_pixel_width, display_pixel_height) )
        pygame.display.set_caption( 'Freedom' )
        self.background = pygame.Surface( self.window.get_size() )
        self.background.fill( color_white )
        self.window.blit( self.background, (0,0) )
                                #-------------------SPRITE LISTS----------------
        self.all_sprites_list = pygame.sprite.RenderUpdates()
        self.bullet_list = pygame.sprite.RenderUpdates()
        self.unit_list = pygame.sprite.RenderUpdates()
                                #------------------UPDATE DISPLAY SURF TO SCREEN
        pygame.display.flip()

    def SpawnUnit(self, unit):
        Unit_Sprite = UnitSprite( unit )
        self.unit_list.add( Unit_Sprite )
        self.all_sprites_list.add( Unit_Sprite ) # Add sprite to lists so that they are shown in window

    def UnitShootBullet(self, unit, shoot_to_xy):
        Bullet_Sprite = BulletSprite( unit, shoot_to_xy )
        self.bullet_list.add( Bullet_Sprite )
        self.all_sprites_list.add( Bullet_Sprite )

    def MoveUnit(self, unit):
        '''
        Implement right click unit movement code here. And in:
        UnitSprite.Update
        '''
        pass

    def Notify(self, event):
        if isinstance(event, TickEvent):
            #Draw everything
            #self.background.fill( color_white )
            #self.window.blit( self.background, (0,0) )
            self.all_sprites_list.clear( self.window, self.background )
            self.all_sprites_list.update() #Calls update method on all sprites in the list
            dirtyRects = self.all_sprites_list.draw( self.window )
            pygame.display.update(dirtyRects)
            '''Last 2 lines above give same result as:
            self.all_sprites_list.draw( self.window )
            pygame.display.flip()
            '''

        elif isinstance(event, UnitSpawnEvent):
            self.SpawnUnit( event.unit )

        elif isinstance(event, UnitMoveEvent):
            self.MoveUnit( event.unit )

        elif isinstance(event, UnitShootBulletEvent):
            self.UnitShootBullet( event.unit, event.shoot_to_xy )

==============================================================================
